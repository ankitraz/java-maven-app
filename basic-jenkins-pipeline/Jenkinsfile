#!/usr/bin/env groovy
def gv
pipeline{
    agent any

    tools{
        maven 'maven-3.8.7'
    }
    

    stages{

        stage('increment version'){
            steps{
                script{
                    echo 'incrementing app version'
                    sh 'mvn build-helper:parse-version versions:set \
                    -DnewVersion=\\\${parsedVersion.majorVersion}.\\\${parsedVersion.minorVersion}.\\\${parsedVersion.nextIncrementalVersion} \
                    versions:commit'
                    def matcher = readFile('pom.xml') =~ '<version>(.+)</version>'
                    def version = matcher[0][1]
                    env.IMAGE_NAME = "$version-$BUILD_NUMBER"
                }
            }
        }


        stage("init"){
            steps{
                script{
                    gv = load "basic-jenkins-pipeline/script.groovy"
                }
            }
        }

        stage("Build jar"){
            steps{
                script{
                    echo "build package"
                    sh "mvn clean package"

                }
            }
        }

        stage("Build docker image"){
            steps{
                echo "Building the docker image..."
                withCredentials([usernamePassword(credentialsId: 'dockerhub-id-pass', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]){
                    sh 'docker login -u $DOCKER_USER -p $DOCKER_PASS'
                    sh "docker build -t ankitraz/myapp:$IMAGE_NAME ."
                    sh 'docker push ankitraz/myapp:$IMAGE_NAME'
                }
            }
        }

        stage("Test"){
            steps{
                echo "Testing the application..."
                echo "version incrementing is working fine lets do it"
            }
        }

        stage("Deploy"){
            steps{
                echo "Deploying the application..."
                echo "Version: $IMAGE_NAME"
            }
        }

        stage("commit version update"){
            steps{
                script{
                    withCredentials([usernamePassword(credentialsId: 'gitlab-id-pass', usernameVariable: 'USER', passwordVariable: 'PASS')]){
                        sh 'git config --global user.email "jenkins@example.com"'
                        sh 'git config --global user.name "jenkins"'


                        
                        
                        sh 'git add .'
                        sh 'git commit -m "ci:version bump"'
                        sh "git push origin https://$USER:$PASS@gitlab.com/ankit241/java-maven-appp.git "
                        // sh "git push origin HEAD:jenkins-jobs"
                }
            }
            }
        }


    }
}
